apiVersion: v1
kind: Template
labels:
  demo: coolstore-microservice
  template: coolstore-pipeline
metadata:
  name: coolstore-pipeline
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: ${APPLICATION_NAME}-pipeline
    name: ${APPLICATION_NAME}-pipeline
  spec:
    runPolicy: Serial
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfile: |-
          node ('maven') {
            stage ('build') {
              echo 'Build'
              openshiftBuild(buildConfig: 'inventory', namespace: '${INVENTORY_PROJECT}', showBuildLogs: 'true')
            }
          }

          node {
            stage ('test') {
              echo "Test"
            }
          }
      type: JenkinsPipeline
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_WEBHOOK_SECRET}
      type: Generic
parameters:
- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
- description: Inventory DEV project name containting the "inventory" buildconfig
  displayName: Inventory DEV project name
  name: INVENTORY_PROJECT
  required: true
# - description: Git source URI for application
#   displayName: Git source repository
#   name: GIT_URI
#   required: true
# - description: Git branch/tag reference
#   displayName: Git branch/tag reference
#   name: GIT_REF
#   required: true
#   value: master
- description: GitHub webhook secret
  displayName: GitHub webhook secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
  required: true
- description: Generic webhook secret
  displayName: Generic webhook secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_WEBHOOK_SECRET
  required: true
